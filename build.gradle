plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.graalvm.buildtools.native' version '0.10.4'
}

group = 'com.dragonfly'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_21

	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

tasks.named('test') {
	useJUnitPlatform()
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java']
		}
	}
	test {
		java {
			srcDirs = ['src/test/java']
		}
	}
}

configurations {
	developmentOnly
}

bootRun {
	systemProperty "spring.profiles.active", System.getProperty("spring.profiles.active", "dev")
	
	if (System.getProperty("spring.profiles.active") == "dev") {
		jvmArgs = [
			"-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"
		]
	}
}
